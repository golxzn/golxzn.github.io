
const primitives = {
	make_plane(gl) {
		return new primitive_info(new Uint8Array([
		//  [         x          ]  [         y          ]  [         z          ]  [ normal 3 + offset  ]  [         UV          ]
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xBF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xBF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
		]), new Uint16Array([
			0, 1, 2, 3
		]), gl.TRIANGLE_STRIP);
	},

	make_cube(gl) {
		return new primitive_info(new Uint8Array([
		//  [         x          ]  [         y          ]  [         z          ]  [ normal 3 + offset  ]  [         UV          ]
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0xFF, 0xFF, 0x00, 0x00,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0xFF, 0xFF,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0x00, 0x00,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xFF, 0xFF,
		]), new Uint16Array([
			0, 1, 2, 2, 1, 3, // Front face
			4, 5, 6, 6, 5, 7, // Back face
			2, 3, 7, 7, 3, 6, // Top face
			5, 4, 0, 0, 4, 1, // Bottom face
			1, 4, 3, 3, 4, 6, // Left face
			0, 2, 5, 5, 2, 7 // Right face
		]), gl.TRIANGLES);
	},

	make_cube_strip(gl) {
		// 0x00, 0x00, 0x80, 0x3F -> 1
		// 0x00, 0x00, 0x80, 0xBF -> -1
		return new primitive_info(new Uint8Array([
		//  [         x          ]  [         y          ]  [         z          ]  [ normal 3 + offset  ]  [         UV          ]
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0xFF, 0xFF, 0x00, 0x00,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0xFF, 0xFF,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0x00, 0x00,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xFF, 0xFF,
		]), new Uint16Array([
			// Using indices to form a cube with a triangle strip
			0, 1, 2, 3, 6, 1, 4, 5, 6, 7, 2, 5, 0, 1
		]), gl.TRIANGLE_STRIP);
	}


}