
const primitives = {
	make_plane(gl) {
		return new primitive_info(new Uint8Array([
		//  [         x          ]  [         y          ]  [         z          ]  [ normal 3 + offset  ]  [         UV          ]
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xBF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xBF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
		]), new Uint16Array([
			0, 1, 2, 3
		]), gl.TRIANGLE_STRIP);
	},

	make_cube(gl) {
		return new primitive_info(new Uint8Array([
		//  [         x          ]  [         y          ]  [         z          ]  [ normal 3 + offset  ]  [         UV          ]
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0xFF, 0xFF, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0xFF, 0xFF, 0xFF, 0xff,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0xFF, 0xff,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0x00, 0x00,
			0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xff,
			0x00, 0x00, 0x80, 0xBF, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xFF, 0xff,
		]), new Uint16Array([
			0, 1, 2, 2, 3, 0, // Front face
			5, 4, 7, 7, 6, 5, // Back face
			3, 2, 6, 6, 7, 3, // Top face
			4, 5, 1, 1, 0, 4, // Bottom face
			1, 5, 6, 6, 2, 1, // Right face
			4, 0, 3, 3, 7, 4 // Left face
		]), gl.TRIANGLES
		);
	},
}